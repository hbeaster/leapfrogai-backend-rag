apiVersion: apps/v1
kind: Deployment
metadata:
  name: rag-deployment
spec:
  replicas: {{ .Values.rag.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: rag
  template:
    metadata:
      labels:
        app: rag
    spec:
      containers:
        - name: rag-container
          image: ghcr.io/defenseunicorns/leapfrogai/rag:{{ .Values.image.lfaiRagTag }}
          imagePullPolicy: Always
          env:
          - name: OPENAI_API_BASE
            value: "{{ .Values.env.openaiApiBase }}"
          - name: OPENAI_API_KEY
            value: "{{ .Values.env.openaiApiKey }}"
          - name: MODEL
            value: "{{ .Values.env.model }}"
          - name: TEMPERATURE
            value: "{{ .Values.env.temperature }}"
          - name: CONTEXT_WINDOW
            value: "{{ .Values.env.contextWindow }}"
          - name: MAX_OUTPUT
            value: "{{ .Values.env.maxOutput }}"
          - name: CHUNK_SIZE
            value: "{{ .Values.env.chunkSize }}"
          - name: OVERLAP_SIZE
            value: "{{ .Values.env.overlapSize }}"
          - name: RESPONSE_MODE
            value: "{{ .Values.env.responseMode }}"
          - name: SSL_VERIFICATION
            value: "{{ .Values.env.sslVerification }}"
          - name: PREFIX
            value: "{{ .Values.env.prefix }}"
          - name: EMBEDDING_MODEL_NAME
            value: "{{ .Values.env.embeddingModelName }}"
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
          securityContext:
            runAsUser: 65532
            runAsGroup: 65532
            fsGroup: 65532